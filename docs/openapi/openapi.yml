openapi: '3.0.0'
info:
  version: 1.0.0
  title: teamdev-2023-posse2-team2C API
  description: API for teamdev-2023-posse2-team2C.
paths:
  /users:
    get:
      tags:
        - Users
      description: 全ユーザー情報取得
      operationId: GetUsers
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Users
      description: ユーザー情報登録
      operationId: CreateUser
      requestBody:
        $ref: '#/components/requestBodies/CreateUserBody'
      responses:
        '201':
          description: ユーザー情報登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /users/{id}:
    put:
      tags:
        - Users
      description: ユーザー情報1件更新
      operationId: UpdateUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateUserBody'
      responses:
        '200':
          description: ユーザー情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized Error
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
  parameters:
    UserId:
      name: id
      in: path
      description: ユーザーを識別するID
      required: true
      schema:
        type: string
  requestBodies:
    UpdateUserBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUser'
    CreateUserBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUser'
  schemas:
    UserId:
      description: ユーザーのUUID
      properties:
        id:
          type: string
          example: 'fd7e7dd8-8ea6-4af9-8d56-11b8ef4486c9'
    User:
      description: レスポンスで返すユーザー情報
      type: object
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - $ref: '#/components/schemas/UserId'
      required:
        - id
    CreateUser:
      description: 登録する際にリクエストに含めるユーザー情報
      allOf:
        - $ref: '#/components/schemas/UserBase'
    UpdateUser:
      description: 更新する際にリクエストに含めるユーザー情報
      allOf:
        - $ref: '#/components/schemas/UserBase'
    UserBase:
      description: ユーザー関連スキーマの共通部分
      type: object
      required:
        - is_admin
        - is_student
        - last_name
        - first_name
        - nickname
        - course_type
        - email
        - gender_id
        - birthday
        - prefecture
        - is_experienced
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              role_name:
                type: string
                example: 'admin'
              display_name:
                type: string
                example: '管理者'
        last_name:
          type: string
          example: '山田'
        first_name:
          type: string
          example: '太郎'
        nickname:
          type: string
          example: '山風'
        course_type:
          type: integer
          example: 1
        email:
          type: string
          example: 'saikan1@email.com'
        gender_id:
          type: integer
          example: 1
        birthday:
          type: string
          example: '2002-09-11'
        prefecture:
          type: string
          example: '東京都'
        is_experienced:
          type: boolean
          example: true
        parent_last_name:
          type: string
          example: 'チーム開発'
        parent_first_name:
          type: string
          example: '五郎'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
tags:
  - name: Users
    description: ユーザーに関するAPI
